plugins {
    id 'java'
    id 'application'
    id "org.sonarqube" version "3.3"
    id "jacoco"
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "java-gcp-220228_John-project-1"
        property "sonar.organization", "java-gcp-220228"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

dependencies {
    implementation 'io.javalin:javalin:4.4.0'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.json:json:20220320'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation platform('com.google.cloud:libraries-bom:25.0.0')
    implementation 'com.google.cloud:google-cloud-storage'
    implementation 'org.apache.tika:tika-core:2.3.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'
    testImplementation 'io.javalin:javalin-testtools:4.4.0'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    mainClass = 'com.revature.main.Server'
}

jar {
    dependsOn ':ui:build'
    from('../static') {
        into 'static'
    }
    manifest {
        attributes 'Main-Class': 'com.revature.main.Server'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy 'exclude'
}

test {
    useJUnitPlatform()
}
